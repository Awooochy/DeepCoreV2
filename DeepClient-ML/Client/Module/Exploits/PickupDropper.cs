using System.Collections;
using System.Collections.Generic;
using System.Linq;
using MelonLoader;
using UnityEngine;
using VRC.SDKBase;

namespace DeepCore.Client.Module.Exploits
{
    internal class PickupDropper
    {
        public static float dropDelay = 0.5f;
        public static bool C = false;
        public static List<VRC_Pickup> cachedPickups = OnLoadedScaneManager.allBaseUdonItem.ToList();

        public static void State(bool s)
        {
            if (s) 
            {
                cachedPickups.Clear();
                cachedPickups.AddRange(OnLoadedScaneManager.allBaseUdonItem);
                MelonCoroutines.Start(Dropper());
                C = s;
            }
            else
            {
                MelonCoroutines.Stop(Dropper());
                C = s;
                cachedPickups.Clear();
            }
        }
        public static IEnumerator Dropper()
        {
            while (true)
            {
                if (!C) yield break;
                Drop();
                yield return new WaitForSecondsRealtime(dropDelay);
            }
        }
        public static void Drop()
        {
            VRCPlayerApi localPlayer = Networking.LocalPlayer;
            if (localPlayer == null)
                return;
            foreach (var pickup in cachedPickups)
            {
                if (pickup == null)
                    continue;
                Networking.SetOwner(localPlayer, pickup.gameObject);
                pickup.Drop();
            }
        }
    }
}
