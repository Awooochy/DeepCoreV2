using System.Collections;
using MelonLoader;
using UnityEngine;
using VRC.Udon;

namespace DeepCore.Client.Module.Exploits
{
    internal class UdonNuker
    {
        public static int Cunter = 0;
        public static bool nukeme = false;
        public static IEnumerator Nuke()
        {
            foreach (var udon in OnLoadedScaneManager.udonBehaviours)
            {
                foreach (var a in udon._eventTable)
                {
                    udon.SendCustomNetworkEvent(VRC.Udon.Common.Interfaces.NetworkEventTarget.All, a.key);
                    Cunter++;
                }
            }
            DeepConsole.Log("UD",$"Nuked {Cunter.ToString()} udon.");
            Cunter = 0;
            yield break;
        }
        public static void State(bool s)
        {
            if (s)
            {
                nukeme = true;
                MelonCoroutines.Start(Keystop());
                MelonCoroutines.Start(UdonKill());
            }
            else
            {
                nukeme = false;
            }
        }
        public static IEnumerator Keystop()
        {
            while (true)
            {
                if (Input.GetKeyDown(KeyCode.Escape))
                {
                    nukeme = false;
                    yield break;
                }
                yield return null;
            }
        }
        public static IEnumerator UdonKill()
        {
            while (nukeme)
            {
                for (int f = 0; f < OnLoadedScaneManager.udonBehaviours.Length; f++)
                {
                    foreach (UdonBehaviour udonobjects in OnLoadedScaneManager.udonBehaviours)
                    {
                        Il2CppSystem.Collections.Generic.Dictionary<string, Il2CppSystem.Collections.Generic.List<uint>>.Enumerator fatblackman = udonobjects._eventTable.GetEnumerator();
                        while (fatblackman.MoveNext())
                        {
                            Il2CppSystem.Collections.Generic.KeyValuePair<string, Il2CppSystem.Collections.Generic.List<uint>> name = fatblackman.Current;
                            udonobjects.SendCustomNetworkEvent(VRC.Udon.Common.Interfaces.NetworkEventTarget.All, name.Key);
                            name = null;
                        }
                        fatblackman = null;
                    }
                    if (!nukeme)
                        break;
                    yield return new WaitForSeconds(0.1f);
                }
                yield return new WaitForSeconds(0.1f);
            }
            yield break;
        }
    }
}
