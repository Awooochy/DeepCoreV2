using System.Windows.Forms;
using DeepCore.Client.Misc;
using MelonLoader;
using ReMod.Core.Managers;
using ReMod.Core.UI.QuickMenu;
using VRC.Core;

namespace DeepCore.Client.ClientMenu.Pages_MainMenu
{
    internal class ExploitHacks
    {
        public static void ExploitHacksMenu(UiManager UIManager)
        {
            ReCategoryPage reCategoryPage = UIManager.QMMenu.AddCategoryPage("Exploits Functions", null);
            reCategoryPage.AddCategory("Exploits");
            ReMenuCategory category = reCategoryPage.GetCategory("Exploits");
            category.AddToggle("EARRAPE MIC", "Make your mic louder and saturated. Don't be toxic please.", delegate (bool s)
            {
                Module.Exploits.LoudMic.State(s);
            });
            category.AddToggle("Max Avatar size", "Make your avatar maximum possible size.", delegate (bool s)
            {
                Module.Exploits.AvatarHeight.Bigtate(s);
            });
            category.AddToggle("Min Avatar size", "Make your avatar minimum possible size.", delegate (bool s)
            {
                Module.Exploits.AvatarHeight.Smalltate(s);
            });
            category.AddToggle("World Creator Spoof", "It spoofs your UDON name as the creator of the world.", delegate (bool s)
            {
                Module.Exploits.OwnerNameSpoofer.State(s);
            }, ConfManager.OwnerSpoof.Value);
            category.AddButton("Serialize/GhostMode", "Disables sending movement data.", delegate
            {
                Module.Photon.MovementSerilize.State();
            });
            category.AddToggle("Mirror Spammer SDK2", "Spams SDK2 World mirrors on and off", delegate (bool s)
            {
                Module.Exploits.MirrorsSpammer.State(s);
            });
            category.AddToggle("Constant Udon Nuke", "Continuous toggled UDON NUKE", delegate (bool s)
            {
                Module.Exploits.UdonNuker.SetNukeState(s);
            });
            category.AddButton("Video Clapper", "", delegate ()
            {
                Module.Exploits.VideoClapper.VideoClap();
            });
            category.AddButton("Udon Nuke", "Fires every UDON event in the world", delegate
            {
                MelonCoroutines.Start(Module.Exploits.UdonNuker.NukeAllUdonEvents());
            });
            category.AddButton("World Trigger Spam", "Spams all world triggers.", delegate
            {
                MelonCoroutines.Start(Module.Exploits.WTriggerNuker.Nuke1());
            });
            category.AddButton("Unicode\nChat", "Send unicode message.", delegate
            {
                PhotonEx.SendChatBoxMessage("\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v");
            });
            category.AddButton("Destroy Portals", "Allow you to destroy all portals.", delegate
            {
                Module.Exploits.PortalEploits.DestroyPortals();
            });
            category.AddButton("Drop \nPortal", "Drop a Portal by ID.", delegate
            {
                Module.Exploits.PortalEploits.DropPortalTid();
            });
            category.AddButton("Copy \nServer IP", "Copy the current Photon IP.", delegate
            {
                Clipboard.SetText(VRCNetworkingClient.field_Internal_Static_VRCNetworkingClient_0.field_Private_String_3);
            });
        }
    }
}
